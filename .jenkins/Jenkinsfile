pipeline {
  agent any

  environment {
    ECR_REPOSITORY         = credentials('ECR_REPOSITORY')
    AWS_ACCOUNT_ID         = credentials('AWS_ACCOUNT_ID')
    AWS_ACCESS_KEY_ID      = credentials('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY  = credentials('AWS_SECRET_ACCESS_KEY')
    MLFLOW_TRACKING_URI    = credentials('MLFLOW_TRACKING_URI')
  }

  stages {
    stage('Continuous Integration') {
      steps {
        script {
          echo "Linting repository"
          echo "Running unit tests"
        }
      }
    }

    stage('Login to ECR') {
      steps {
        script {
          sh '''
            aws ecr get-login-password --region ap-south-1 | \
            docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com
          '''
        }
      }
    }

    stage('Clean Workspace') {
      steps {
        script {
          deleteDir() // Wipes Jenkins workspace to avoid stale files
        }
      }
    }

    stage('Checkout Fresh Code') {
      steps {
        git branch: 'main', url: 'https://github.com/Ven-Knight/Deep-Lung-Cancer-Detector.git'
      }
    }


    stage('Build Image') {
      steps {
        script {
          sh 'docker build --no-cache -t ${ECR_REPOSITORY}:latest .'
        }
      }
    }

    stage('Push Image') {
      steps {
        script {
          sh 'docker push ${ECR_REPOSITORY}:latest'
        }
      }
    }

    stage('Continuous Deployment') {
      steps {
        sshagent(['ssh_key']) {
          script {
            sh """
              ssh -o StrictHostKeyChecking=no -l ubuntu 15.207.82.136 '
                cd /home/ubuntu/
                wget https://raw.githubusercontent.com/Ven-Knight/Deep-Lung-Cancer-Detector/refs/heads/main/docker-compose.yml
                export IMAGE_NAME=${ECR_REPOSITORY}:latest
                export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                export AWS_REGION=ap-south-1
                export MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}

                aws ecr get-login-password --region ap-south-1 | \
                docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com

                docker stop lung_app || true
                docker rm lung_app || true
                docker compose up -d
              '
            """
          }
        }
      }
    }
  }

  post {
    always {
      sh 'docker system prune -f'
    }
  }
}